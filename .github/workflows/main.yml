name: main

on:
  push:
    branches: [dev]

  pull_request:
    branches: [dev]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: attempt to get cached build
        id: cache-build
        uses: actions/cache@v3
        with:
          path: dist
          key: app-assets-cache-${{ hashFiles('src/**') }}-${{ hashFiles('package-lock.json') }}

      - run: npm install
        if: success() && steps.cache-build.outputs.cache-hit != 'true'

      - name: build
        run: npm run build
        if: success() && steps.cache-build.outputs.cache-hit != 'true'

      - uses: actions/upload-artifact@v3
        with:
          name: frontend-artifact
          path: dist

      - name: get app version
        id: app-version
        run: echo "version=`node ./version.js`" >> "$GITHUB_OUTPUT"

      - name: bundle dist
        run: cd dist ; tar -czv -f ../app-assets.tar.gz *

      - name: create release (dev branch only)
        uses: ncipollo/release-action@v1
        if: success() && github.ref == 'refs/heads/dev'
        with:
          commit: ${{ github.sha }}
          tag: ${{ steps.app-version.outputs.version }}
          artifacts: app-assets.tar.gz

  test:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref != 'refs/tags/prod'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: test
        run: echo test

  deploy-development:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/dev'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: frontend-artifact
          path: dist

      - name: deploy
        run: cat dist/app.txt

  deploy-preview:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref != 'refs/tags/prod' &&  github.ref != 'refs/heads/dev'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: frontend-artifact
          path: dist

      - name: deploy
        run: cat dist/app.txt
